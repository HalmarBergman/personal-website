import * as h3 from 'h3';
import { HTTPMethod, H3Event, getRequestHeaders } from 'h3';

interface CorsOptions {
    origin?: '*' | 'null' | (string | RegExp)[] | ((origin: string) => boolean);
    methods?: '*' | HTTPMethod[];
    allowHeaders?: '*' | string[];
    exposeHeaders?: '*' | string[];
    credentials?: boolean;
    maxAge?: string | false;
    preflight?: {
        statusCode?: number;
    };
}
declare type DeepRequired<T> = T extends (string | number | boolean | Function | RegExp) ? T : T extends {} ? {
    [K in keyof T]-?: DeepRequired<T[K]>;
} : Required<T>;
declare type ResolvedCorsOptions = DeepRequired<CorsOptions>;
declare type EmptyHeader = {};
declare type AccessControlAllowOriginHeader = {
    'Access-Control-Allow-Origin': '*' | 'null' | string;
    Vary: 'Origin';
} | EmptyHeader;
declare type AccessControlAllowMethodsHeader = {
    'Access-Control-Allow-Methods': '*' | string;
} | EmptyHeader;
declare type AccessControlAllowCredentialsHeader = {
    'Access-Control-Allow-Credentials': 'true';
} | EmptyHeader;
declare type AccessControlAllowHeadersHeader = {
    'Access-Control-Allow-Headers': '*' | string;
    Vary: 'Access-Control-Request-Headers';
} | EmptyHeader;
declare type AccessControlExposeHeadersHeader = {
    'Access-Control-Expose-Headers': '*' | string;
} | EmptyHeader;
declare type AccessControlMaxAgeHeader = {
    'Access-Control-Max-Age': string;
} | EmptyHeader;
declare type CorsHeaders = AccessControlAllowOriginHeader | AccessControlAllowMethodsHeader | AccessControlAllowCredentialsHeader | AccessControlAllowHeadersHeader | AccessControlExposeHeadersHeader | AccessControlMaxAgeHeader;

declare function defineCorsEventHandler(options: CorsOptions): h3.EventHandler<void>;

declare function isPreflight(event: H3Event): boolean;
declare function isAllowedOrigin(origin: ReturnType<typeof getRequestHeaders>['origin'], options: CorsOptions): boolean;
declare function appendCorsPreflightHeaders(event: H3Event, options: CorsOptions): void;
declare function appendCorsActualRequestHeaders(event: H3Event, options: CorsOptions): void;

export { AccessControlAllowCredentialsHeader, AccessControlAllowHeadersHeader, AccessControlAllowMethodsHeader, AccessControlAllowOriginHeader, AccessControlExposeHeadersHeader, AccessControlMaxAgeHeader, CorsHeaders, CorsOptions, EmptyHeader, ResolvedCorsOptions, appendCorsActualRequestHeaders, appendCorsPreflightHeaders, defineCorsEventHandler, isAllowedOrigin, isPreflight };
